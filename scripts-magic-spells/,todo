#!/bin/bash

# this is the daily todo (daily quest)
# - creates new todolist with date (YYYY-MM-DD) as its filename
# - stores in vault/Personal/todos
# - requires "shortcuts/no-neck-pain.nvim" plugin to center the buffer

set -e

date_today=$(date +%Y-%m-%d)
todo_file="$VAULT/Personal/todos/"$date_today.md

# check if $VAULT path exists
cd "$VAULT" || {
    echo "No VAULT env path created. Set a VAULT path in your .zshrc or .bashrc first."
    exit 1
}

# if [ -z "$vault_check" ]; then
# 	echo "No VAULT env path created. Set a VAULT path in your .zshrc or .bashrc first."
# 	exit 1
# fi

new_todo() {
    touch "$todo_file"
    cat >"$todo_file" <<EOF
# DAILY QUEST for $date_today:

- [ ] 100 Pushups
- [ ] 100 Sit-ups
- [ ] 100 Squats
- [ ] Workout/Rest Day

- [ ] 30 day devops challenge
- [ ] r/linuxupskillchallenge daily
- [ ] finish one file in the default-responses files in \$(Personal/Brain-Configuration/)


# Side Quests:

- [ ] [watch API performance design BEST PRACTICES](https://youtu.be/CI0ZxSQ8sWQ?si=ZCrenujPxmeuZ5LX)
- [ ] VLANS: https://www.youtube.com/watch?v=JszGeQPTo4w&ab_channel=CrosstalkSolutions
- [ ] offsite and onsite Git server
  - [ ] offsite: cloud server, codeberg
  - [ ] onsite: self-hosted gitlab or gitea

- [ ] ntfy.sh docker setup

- [ ] continue sort lock

- [ ] git intricasies https://www.reddit.com/r/linux/s/NSmM0zzAxu
- [ ] setup cron jobs automation
- [ ] look into webhooks

- [ ] 455250 482004 491968 mibry
- [ ] https://github.com/caronc/apprise?ref=selfh.st -> notification
- [ ] https://github.com/prometheus/blackbox_exporter -> probe/ping external services/endpoints (ex. alerts when token expired on some REST API)
- [ ] make a script to check if system got updated correctly: \$(uname -r) then \$(ls /usr/lib/modules)

## Go

- [ ] see \`swag-go\ or \`oapi-codegen\` OpenAPI spec Code Generator for Go

## Kubernetes

- [ ] [go n kubernetes things practical](https://youtube.com/@dhij)
- [ ] add networking k8s: https://www.reddit.com/r/kubernetes/s/TOZlIZ3Ggg and [THIS](https://www.reddit.com/r/kubernetes/comments/1cj88by/the_torture_starts_here/)
- [ ] practice k8s (killercoda, play-labs-with-k8s, kodekloud)
    - [ ] setup kind or k3s or minikube for practice
- [ ] [Kubernetes Networking Series](https://youtube.com/playlist?list=PLSAko72nKb8QWsfPpBlsw-kOdMBD7sra-&si=IVWpBw9YBy7UYUc_)

## DevOps things

- [ ] [compose files scripts volumes structure](https://www.reddit.com/r/selfhosted/s/wENppd13RC)
- [ ] [cron jobs](https://youtu.be/sKH5cpCrpes?si=w-8BuZa6MkV5Y2cj)
- [ ] [k3s homelab](http//github.com/loganmarchione/k8s_homelab)
- [ ] [ansible role to update all with reboot](http//www.reddit.com/r/selfhosted/s/cy940X7SL2)
- [ ] Scripts to automate things wrt
    - APIs
    - Database shut down start 
    - Monitoring
    - Alert
    - Log analysis
    - Log anamoly detection 
    - Backups
    - Interface with 3rd party apis
    - Callbacks 
    - Ssl renewals
    - Cron jobs
    - Cloud Iac.

# KNOW HOW TO:

- [ ] basic understanding of the filesystem, what goes where, and how to move around in it.
- [ ] basic networking setup and troubleshooting.
- [ ] basic administrative tasks like installing/uninstalling stuff, installing updates, reading and setting file permissions, etc.
- [ ] ssh basics (key generation and placement, connection, etc)

## What would make a candidate really stand out:

- [ ] knowing how to join a Linux machine to a domain and managing ssh/sudo access to it using domain credentials instead of keys (familiarity with sshd is helpful here).
- [ ] familiarity with ansible and satellite server.
- [ ] knowing how to mount basic data disks and network shares.
- [ ] how to grow root and swap partitions without downtime (I guess also worth saying familiarity with LVM for this one).
- [ ] familiarity with Podman.


EOF
}

if [ ! -f "$todo_file" ]; then
    echo "[ NEW ] Creating $date_today.md..."
    new_todo
fi

nvim "$todo_file" -c ":NoNeckPain" '+ normal gg' # needs NoNeckPain nvim plugin (will still work if don't have it)
# nvim '+ normal Gzzo' "$todo_file" -c :NoNeckPain
